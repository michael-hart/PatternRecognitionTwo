% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by NFTOOL
%
 
% Load the data from wine data
res_path = get_res_path();
load(strjoin({res_path 'wine.data.csv'}, filesep));

% Get labels as first column
labels = wine_data(:, 1);
wine_data = wine_data(:, 2:end);

% Set the inputs as wine data, and targets as classes
inputs = wine_data';
targets = labels';
 
% Create a Fitting Network
hiddenLayerSize = 10;
net = fitnet(hiddenLayerSize);

% Set up Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;
 
% Train the Network
[net,tr] = train(net,inputs,targets);
 
% Test the Network
outputs = net(inputs);
errors = gsubtract(outputs,targets);
performance = perform(net,targets,outputs)
 
% View the Network
view(net)
 
% Plots
% Uncomment these lines to enable various plots.
figure, plotperform(tr)
figure, plottrainstate(tr)
figure, plotfit(targets,outputs)
figure, plotregression(targets,outputs)
figure, ploterrhist(errors)